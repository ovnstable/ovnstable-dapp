name: Node.js CI

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install and build
        run: npm install && npm run build-dev

      - name: Build/Deploy Docker Image
        run: |
          docker build . -t cr.yandex/crpg11k469bhc8lch9gm/overnight/dapp:dev
          docker login \
                   --username oauth \
                   --password ${{ secrets.DOCKER_TOKEN }} \
                  cr.yandex
          docker push  cr.yandex/crpg11k469bhc8lch9gm/overnight/dapp:dev


      - name: Update dev
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker login \
                     --username oauth \
                     --password ${{ secrets.DOCKER_TOKEN }} \
                    cr.yandex
            docker pull cr.yandex/crpg11k469bhc8lch9gm/overnight/dapp:dev
            docker-compose -f /root/ovn-dev/docker-compose.yaml up -d --no-deps dapp

